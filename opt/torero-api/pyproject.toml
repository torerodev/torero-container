[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "torero-api"
version = "0.1.0"
description = "RESTful API for torero"
authors = [
  { name = "William Collins", email = "opensource@itential.com" }
]
readme = "README.md"
requires-python = ">=3.10,<4.0"
license = {text = "Apache-2.0"}
keywords = ["fastapi", "api", "torero", "automation", "ansible", "opentofu"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Web Environment",
    "Framework :: FastAPI",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: System :: Systems Administration",
    "Topic :: System :: Networking",
]
dependencies = [
  "fastapi>=0.115.0,<0.116.0",
  "uvicorn[standard]>=0.29.0,<0.30.0",
  "pydantic>=2.0.0,<3.0.0",
  "python-multipart>=0.0.20",
  "httpx>=0.25.0",
  "python-dateutil>=2.8.2",
]

[project.urls]
"Homepage" = "https://github.com/torerodev/torero-api"
"Bug Tracker" = "https://github.com/torerodev/torero-api/issues"
"Documentation" = "https://github.com/torerodev/torero-api#readme"
"Source Code" = "https://github.com/torerodev/torero-api"
"Changelog" = "https://github.com/torerodev/torero-api/releases"

[project.scripts]
torero-api = "torero_api.__main__:main"
generate-openapi = "scripts.generate_openapi:generate_openapi_schema"

[project.optional-dependencies]
yaml = ["PyYAML>=6.0"]
docs = ["PyYAML>=6.0", "mkdocs>=1.5.2", "mkdocs-material>=9.1.21"]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "httpx>=0.28.1",
    "black>=23.7.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "PyYAML>=6.0",
]
all = ["torero-api[yaml,docs,dev]"]

[tool.uv]
dev-dependencies = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "httpx>=0.28.1",
    "black>=23.7.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "mypy>=1.5.0",
    "PyYAML>=6.0",
    "pre-commit>=3.3.3",
    "build>=0.10.0",
    "twine>=4.0.0",
]

[tool.hatch.build.targets.wheel]
packages = ["torero_api"]

[tool.hatch.build]
include = [
    "torero_api/**/*.py",
    "torero_api/py.typed",
    "README.md",
    "LICENSE",
]
exclude = [
    "tests/",
    "docs/",
    "scripts/",
    ".github/",
]

[tool.hatch.version]
path = "torero_api/__init__.py"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
python_classes = "Test*"
asyncio_mode = "auto"
filterwarnings = [
    "ignore::PendingDeprecationWarning:starlette.formparsers"
]
addopts = [
    "--cov=torero_api",
    "--cov-report=term-missing",
    "--cov-report=xml",
    "--cov-report=html",
    "-v"
]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_glob = ["**/migrations/*"]

[tool.flake8]
max-line-length = 88
extend-ignore = [
    "E203",  # whitespace before ':'
    "E501",  # line too long (handled by black)
    "W503",  # line break before binary operator
]
exclude = [
    ".git",
    "__pycache__",
    ".venv",
    "build",
    "dist",
    "*.egg-info",
]
per-file-ignores = [
    "__init__.py:F401",  # imported but unused
    "tests/*:S101",      # use of assert
]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "uvicorn.*",
    "fastapi.*",
]
ignore_missing_imports = true

[tool.coverage.run]
source = ["torero_api"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/conftest.py",
    "*/__main__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\\\bProtocol\\\\(.*\\\\):",
    "@(abc\\\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests"]
tests = ["B201", "B301"]
skips = ["B101", "B601"]
